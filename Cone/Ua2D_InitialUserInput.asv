function [Experiment,CtrlVar,time,dt,MeshBoundaryCoordinates]=Ua2D_InitialUserInput(CtrlVar)
    
 
    Experiment='Cone';
    CtrlVar.FlowApproximation='hybrid' ;  % 'SSTREAM'|'SSHEET'|'Hybrid'
    MeshBoundaryCoordinates=flipud([-100e3 -100e3 ; 100e3 -100e3 ; 100e3 100e3 ; -100e3 100e3]);
    
    CtrlVar.doPrognostic=1 ; 
    CtrlVar.doDiagnostic=0  ;
    
    dt=0.01; time=0; CtrlVar.nTimeSteps=2; CtrlVar.TotalTime=500;    
    
    %% restart options
    CtrlVar.Restart=0;  CtrlVar.WriteRestartFile=1; 
    CtrlVar.NameOfRestartFiletoWrite='Cone-RestartFile.mat'; CtrlVar.NameOfRestartFiletoRead=CtrlVar.NameOfRestartFiletoWrite;
    CtrlVar.WriteRestartFileInterval=100;
    %%
    
    
    CtrlVar.doInverseStep=0;
    CtrlVar.ResetTimeStep=0 ; 
    
    CtrlVar.doplots=0; CtrlVar.PlotMesh=1;
    CtrlVar.doAdaptMeshPlots=1;
        
    CtrlVar.GmeshFile='Cone-GmeshInitialGeoInputFile';
    CtrlVar.ReadInitialMesh=;
    CtrlVar.ReadInitialMeshFileName='MeshFileNode3Ele15094.mat';
    CtrlVar.FEmeshAdvanceRetreatBackgroundMeshFileName='BackgroundMeshFile.mat';
    CtrlVar.meshgeneration=1; CtrlVar.TriNodes=3 ; CtrlVar.sweep=1;
    CtrlVar.MeshSize=2.5e3;
    CtrlVar.MeshSizeMax=2.5e3;  
    CtrlVar.MeshSizeMin=1e3;
    
    CtrlVar.OnlyMeshDomainAndThenStop=0; % if true then only meshing is done and no further calculations. Usefull for checking if mesh is reasonable
    CtrlVar.OnlyDoFirstTransientPlotAndThenStop=0; % stops run after first transient plot has been made, usefull for initial testing purposes, this will
    CtrlVar.MaxNumberOfElements=20e3;
    
    
    %% plotting
    CtrlVar.PlotXYscale=1000;
  
    
    %% tolerances
     CtrlVar.Report_if_b_less_than_B=1;
    %% Adaptive Time Stepping (ATS) time stepping variables
    CtrlVar.AdaptiveTimeStepping=1 ;   % true if time step should potentially be modified
    CtrlVar.ATStimeStepTarget=1.0  ;    % maximum time step allowed
    CtrlVar.ATSTargetIterations=5;      % if number of non-lin iterations has been less than ATSTargetIterations for
    %% adapt mesh
    CtrlVar.AdaptMesh=0;

    CtrlVar.doRemeshPlots=1;
    
    CtrlVar.MeshRefinementMethod='explicit';
    CtrlVar.AdaptMeshIterations=1;
    CtrlVar.RefineMeshOnRestart=0;
    CtrlVar.SaveAdaptMeshFileName=[];    %  file name for saving adapt mesh. If left empty, no file is written
    CtrlVar.AdaptMeshInitial=1  ; % remesh in first iteration (Itime=1)  even if mod(Itime,CtrlVar.AdaptMeshInterval)~=0.
    CtrlVar.AdaptMeshInterval=1 ; % remesh whenever mod(Itime,CtrlVar.AdaptMeshInterval)==0
    
    
     
   %% thick min
       %% Pos. thickness constraints
    CtrlVar.ThicknessConstraintsInfoLevel=1  ;
    CtrlVar.ThickMin=0;                      % minimum allowed thickness without (potentially) doing something about it
    
    CtrlVar.ResetThicknessToMinThickness=0;  % if true, thicknes values less than ThickMin will be set to ThickMin (not to be recomended)
    CtrlVar.ResetThicknessInNonLinLoop=0;    % if true, thickness in the non-linear iteration of the uvh implicit approach
                                             % is set to zero, provided CtrlVar.ResetThicknessToMinThickness is also true (usually not a good idea)
    CtrlVar.ThicknessConstraints=1;          % If true then min thickness is enforced using active set method 
    CtrlVar.ThicknessConstraintsItMax=5  ;  % if 0, then active set is updated and then directly proceded to next timestep
    CtrlVar.ThicknessBarrier=0;              % set to True for using barrier method                                          
    CtrlVar.ThicknessBarrierThicknessScale=CtrlVar.ThickMin;     % 
    CtrlVar.ThicknessBarrierDiagonalFraction=1;   % size of barrier term in comparision to mean abs of diagonal elements 
    CtrlVar.ThicknessBarrierMinThickMultiplier=2;  % exp. barrier is 1 at ThickMin * MinThickMuliplier
    CtrlVar.ThicknessBarrierAccumulation=1000;
    CtrlVar.ThicknessConstraintsLambdaPosThreshold=0; % if Thickconstraints are larger than this value they are inactivated, should be zero 

 
    %% FEmesh Advance/Retreat activation/deactivation
    CtrlVar.FEmeshAdvanceRetreat=1; 
    CtrlVar.FEmeshAdvanceRetreatDT=0;
    CtrlVar.ThickMinDeactivateElements=1;
    CtrlVar.MinSurfAccRequiredToReactivateNodes=0;  % If surface accumulation is larger than this, then a node is considered to have positive ice thickness
    
    
end
