function [sFS,uFS,vFS,wFS]=LinearizedFullStokesFlowSolutions(MUA,s,b,S,B,h,rho,AGlen,n,C,m)


if ~isequal(n,1) || ~isequal(m,1)
    fprintf(' can only compare with linearized FS solutions for n=1 and m=1 \n')
    return
end

    x=MUA.coordinates(:,1); y=MUA.coordinates(:,2); 

    eta=1/(2*AGlen(1));

    Nfft=1024;
    xgrid=linspace(min(x),max(x),Nfft); ygrid=linspace(min(y),max(y),Nfft);
    [X,Y]=meshgrid(xgrid,ygrid);
    nx=length(xgrid) ; ny=length(ygrid) ; dx=xgrid(2)-xgrid(1);dy=ygrid(2)-ygrid(1);
    
    %%
    [sGrid,bGrid,SGrid,BGrid,alpha]=DefineGeometry(Experiment,[X(:) Y(:)],CtrlVar);
    [CGrid,m]=DefineSlipperyDistribution(Experiment,[X(:) Y(:)]);
    
    
    CGrid=reshape(CGrid,size(X));
    sGrid=reshape(sGrid,size(X));
    bGrid=reshape(bGrid,size(X));
    BGrid=reshape(BGrid,size(X));
    SGrid=reshape(SGrid,size(X));
    C0=mean(CGrid(:));
    b0=mean(bGrid(:));
    s0=mean(sGrid(:));
    h0=s0-b0;
    
    ub=C0*(mean(rho)*g*h0*sin(alpha))^m;
    
    
    db=bGrid-b0;
    dc=CGrid-C0;
    ds=sGrid-s0;
    
    
    
    delta_s=ifft2(ds); delta_b=ifft2(db); delta_c=ifft2(dc);
    k=fftspace(nx,dx); k(1)=eps ;
    l=fftspace(ny,dy); l(1)=eps ;
    
    % multiply transfer functions with corresponding basal perturbations
    % do inverse fft and only keep the real part
    
    
    sAnalytical=real(fft2(SSTREAM_Tss_t_3d_m(k,l,time,alpha,h0,eta,C0,mean(rho),g,m).*delta_s)+...
        fft2(SSTREAM_Tsb_t_3d_m(k,l,time,alpha,h0,eta,C0,mean(rho),g,m).*delta_b)+...
        fft2(SSTREAM_Tsc_t_3d_m(k,l,time,alpha,h0,eta,C0,mean(rho),g,m).*delta_c));
    
    uAnalytical=real(fft2(SSTREAM_Tus_t_3d_m(k,l,time,alpha,h0,eta,C0,mean(rho),g,m).*delta_s)+...
        fft2(SSTREAM_Tub_t_3d_m(k,l,time,alpha,h0,eta,C0,mean(rho),g,m).*delta_b)+...
        fft2(SSTREAM_Tuc_t_3d_m(k,l,time,alpha,h0,eta,C0,mean(rho),g,m).*delta_c));
    
    vAnalytical=real(fft2(SSTREAM_Tvs_t_3d_m(k,l,time,alpha,h0,eta,C0,mean(rho),g,m).*delta_s)+...
        fft2(SSTREAM_Tvb_t_3d_m(k,l,time,alpha,h0,eta,C0,mean(rho),g,m).*delta_b)+...
        fft2(SSTREAM_Tvc_t_3d_m(k,l,time,alpha,h0,eta,C0,mean(rho),g,m).*delta_c));
    
    
    wAnalytical=real(fft2(SSTREAM_Tws_t_3d_m(k,l,time,alpha,h0,eta,C0,mean(rho),g,m).*delta_s)+...
        fft2(SSTREAM_Twb_t_3d_m(k,l,time,alpha,h0,eta,C0,mean(rho),g,m).*delta_b)+...
        fft2(SSTREAM_Twc_t_3d_m(k,l,time,alpha,h0,eta,C0,mean(rho),g,m).*delta_c));
    
    sAnalytical=sAnalytical+h0 ;
    uAnalytical=uAnalytical+ub ;
    
    
    
    % interpolate analytical values onto the numerical FE mesh
    sFS = interp2(X,Y,sAnalytical,y,x,'spline');
    uFS = interp2(X,Y,uAnalytical,y,x,'spline');
    vFS = interp2(X,Y,vAnalytical,y,x,'spline');
    wFS = interp2(X,Y,wAnalytical,y,x,'spline');
end